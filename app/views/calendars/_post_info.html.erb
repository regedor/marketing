<div class="ml-4 w-1/4">
  <div id="post-info" class="Container text-gray-600 h-full">
    <div id="no-info">
      <span> Hover a Post</span>
    </div>
    <div id="have-info" class="hidden">
      <div>
        <div class="grid grid-cols-2 mb-4 gap-0.5">
          <% (1..4).each do |num| %>
            <%= link_to "", id:"attachments_#{num}", class:"hidden", target: :_blank do %>
              <%= image_tag "", id:"img_#{num}", class: "rounded-lg w-full h-36 object-cover" %>
            <% end %>
          <% end %>
        </div>
        <div class="flex justify-between mb-4">
          <div class="Bottom-left">
            <%= link_to "Download Images", "", class: "Btn-download", id: "download-images" %>
          </div>
          <div class="Bottom-right">
            <button class="Btn-primary hidden" id="more-photos">See More Photos</button>
          </div>
        </div>
        <div class="overflow-y-auto relative">
          <table class="min-w-full bg-white shadow-md rounded-lg border border-gray-200">
            <tbody class="bg-white divide-y divide-gray-200">
              <tr class="hover:bg-gray-100">
                <th class="TableHeader border-r border-gray-200">Social Media</th>
                <td class="TableEntry2 border-r border-gray-200">
                  <div class="flex">
                    <div class="flex" id="social_platforms">
                      <% ["facebook", "instagram", "x", "linkedin", "telegram"].each do |platform| %>
                        <%= image_tag "platforms/#{platform}.svg", class: "hidden w-6 h-6", id: platform, alt: platform %>
                      <% end %>
                    </div>
                    <div class="ml-auto" id="status"></div>
                  </div>
                </td>
              </tr>
              <tr class="hover:bg-gray-100">
                <th class="TableHeader border-r border-gray-200">Time</th>
                <td class="TableEntry2 border-r border-gray-200" id="publish_date"></td>
              </tr>
              <tr class="hover:bg-gray-100">
                <th class="TableHeader border-r border-gray-200">Calendar</th>
                <td class="TableEntry2 border-r border-gray-200" id="calendar"></td>
              </tr>
              <tr class="hover:bg-gray-100">
                <th class="TableHeader border-r border-gray-200">Author</th>
                <td class="TableEntry2 border-r border-gray-200" id="author"></td>
              </tr>
              <tr class="hover:bg-gray-100">
                <th class="TableHeader border-r border-gray-200">Design Idea</th>
                <td class="TableEntry2 border-r border-gray-200" id="design_idea"></td>
              </tr>
              <tr class="hover:bg-gray-100">
                <th class="TableHeader border-r border-gray-200">Default Copy</th>
                <td class="TableEntry2 border-r border-gray-200">
                  <span id="copy"></span>
                  <button id="copy-button" class="relative p-2 hover:bg-gray-100 rounded transition-all duration-200 ease-in-out">
                    <img src="<%= asset_path('copy.svg') %>" alt="Copy" class="w-4 h-4"/>
                  </button>
                  <span id="copy-message" class="mr-2 text-green-600 bg-gray-100 px-2 py-1 rounded-md text-xs absolute font-bold right-full top-2 invisible">
                    Copied!
                  </span>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  $(document).ready(function () {
    $('.draggable').hover(fillPostInfo, () => {});

    function buildAxios() {
      axios.defaults.withCredentials = true;
      const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
      axios.defaults.headers.common['X-CSRF-Token'] = csrfToken;
    }

    var array_attachments = [];
    function showPhotos(attachments) {
      for(var num = 0; num < attachments.length; num++) {
        $('#attachments_' + (num+1)).attr("href", attachments[num].content_url);
        $('#attachments_' + (num+1)).find('#img_' + (num + 1)).attr("src", attachments[num].content_url);
        $('#attachments_' + (num+1)).removeClass('hidden')
      }
      if (attachments.length > 4) {
        $('#more-photos').removeClass('hidden');
        array_attachments = attachments;
      }
    }

    const statusToIcon = {
      "approved": "ðŸŸ¢",
      "in_analysis": "ðŸŸ¡",
      "rejected": "ðŸ”´"
    };

    function fillInfo(data) {
      $('#design_idea').text(data.design_idea);
      $('#calendar').text(data.calendar);
      $('#author').text(data.author);
      $('#status').text(statusToIcon[data.status] || '');
      $('#copy').text(data.perspective_default_copy);
      $('#publish_date').text(data.publish_date);
      data.socialplatforms.forEach(sp => $(`#${sp.name}`).removeClass('hidden'));
      $('#no-info').addClass('hidden');
      $('#have-info').removeClass('hidden');
      showPhotos(data.attachments);
      $('#download-images').removeClass('hidden').attr('href', `/calendars/${data.calendar_id}/posts/${data.post_id}/download`);
    }

    function clearPostInfo() {
      $('#social_platforms').children().addClass('hidden');
      ['#design_idea', '#calendar', '#author', '#status', '#copy', '#publish_date'].forEach(id => $(id).text(''));
      $('#no-info').text('Hover a Post').removeClass('hidden');
      $('#have-info').addClass('hidden');
      [1, 2, 3, 4].forEach(num => {
        $(`#attachments_${num}`).addClass('hidden').attr("href", "");
        $(`#img_${num}`).attr("src", "");
      });
      $('#more-photos').addClass('hidden');
      $('#download-images').addClass('hidden');
    }

    function fillPostInfo() {
      const postId = $(this).data("post-id");
      const calendarId = $(this).data("calendar-id");
      const url = `/calendars/${calendarId}/posts/${postId}/json`;

      clearPostInfo();
      $('#no-info').text('Loading...');
      buildAxios();
      axios.get(url)
        .then(response => response.data.post)
        .then(data => fillInfo(data))
        .catch(() => $('#no-info').text('Error'));
    }

    $('#more-photos').on('click', function () {
      $('#myModal').removeClass('hidden').addClass('flex');
      $('#photos-display').empty();
      array_attachments.forEach(attachment => {
        $('<img>')
          .attr('src', attachment.content_url)
          .addClass('w-full h-36 object-cover rounded-lg mb-4')
          .appendTo('#photos-display');
      });
    });

    // Copy functionality
    $('#copy-button').on('click', function() {
      const copyText = $('#copy').text().trim();
      if (copyText) {
        navigator.clipboard.writeText(copyText)
          .then(() => {
            $('#copy-message').removeClass('invisible');
            setTimeout(function() {
              $('#copy-message').addClass('invisible');
            }, 1000);
          })
          .catch(err => {
            console.error('Error copying text: ', err);
            alert('Failed to copy text. Please try again.');
          });
      } else {
        alert('No text to copy.');
      }
    });
  });

  // Add this JavaScript to application.js or relevant js file
  document.addEventListener('DOMContentLoaded', function() {
    const copyButton = document.getElementById('info-copy-button');
    const copyMessage = document.getElementById('info-copy-message');

    if (copyButton) {
      copyButton.addEventListener('click', function() {
        const textToCopy = this.dataset.copyText;
        
        // Copy text to clipboard
        navigator.clipboard.writeText(textToCopy).then(() => {
          // Show success message
          copyMessage.classList.remove('invisible');
          
          // Hide after 1 second
          setTimeout(() => {
            copyMessage.classList.add('invisible');
          }, 1000);
        });
      });
    }
  });
</script>