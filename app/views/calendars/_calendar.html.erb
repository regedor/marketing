<%
  statusToIcon = {
    draft: "ðŸŸ£",
    pending_review: "ðŸŸ¡",
    approved: "ðŸŸ¢",
    rejected: "ðŸ”´",
    archived: "âš«"
  };
%>

<div id="calendar-div" class="w-3/4">
  <div class="Container2 p-3">
    <div class="flex justify-between items-center mb-4">
      <%= link_to "Previous Year", params.permit(:start_date, calendar_ids: []).merge(start_date: @start_date.prev_year), class: "text-blue-500 hover:underline" %>
      <%= link_to "Previous", params.permit(:start_date, calendar_ids: []).merge(start_date: @start_date.prev_month), class: "text-blue-500 hover:underline" %>
      <div class="text-lg font-bold text-gray-700">
        <%= @start_date.strftime("%B %Y") %>
      </div>
      <%= link_to "Next", params.permit(:start_date, calendar_ids: []).merge(start_date: @start_date.next_month), class: "text-blue-500 hover:underline" %>
      <%= link_to "Next Year", params.permit(:start_date, calendar_ids: []).merge(start_date: @start_date.next_year), class: "text-blue-500 hover:underline" %>
    </div>
    <%= month_calendar(events: @posts, attribute: :publish_date, previous_label: nil, next_label: nil) do |date, posts| %>
      <div class="droppable border relative calendar-box" data-date="<%= date %>">
        <div class="date text-sm font-bold text-gray-700">
          <div class="p-2 flex">
            <%= date.day %>
            <% if @calendars.length == 1 || @only_1.present? %>
              <% calendar = @calendars.length == 1 ? @calendars[0] : @only_1%>
              <%= link_to "+", new_calendar_post_path(calendar,date:date), class: "text-center w-6 h-6 bg-yellow-400 text-black rounded-full shadow-md ml-auto"%>
            <% else %>
              <button class="w-6 h-6 bg-yellow-400 text-black rounded-full shadow-md create-post ml-auto" data-day="<%= date.month %>-<%= date.day%>">+</button>
            <% end %>
          </div>
          <div id="<%= date.month %>-<%= date.day%>" class="w-full hidden absolute left-0 border bg-white border-gray-300 shadow-md rounded-md max-h-32 overflow-y-auto z-50">
            <ul>
              <% @calendars.each do |calendar| %>
                <li>
                  <%= link_to calendar.name, new_calendar_post_path(calendar,date:date), class: "block block px-4 py-2 text-gray-700 hover:bg-yellow-400" %>
                </li>
              <% end %>
            </ul>
          </div>
        </div>
        <div class="posts-container overflow-y-auto grid grid-cols-2 gap-1">
          <% posts.each do |post| %>
            <% attachment = @attachments_by_post_id[post.id] %>
            <% if attachment && attachment[:preview_url].present? %>
              <%= link_to calendar_post_path(post.calendar, post), class: "draggable block", data: { post_id: post.id, calendar_id: post.calendar.id , datetime: post.publish_date - Time.new(post.publish_date.year, post.publish_date.month, post.publish_date.day) } do %>
                <div class="overflow-hidden">
                  <div class="absolute text-xs text-white bg-black bg-opacity-20 p-0.2 rounded-full"><%= statusToIcon.dig(post.status.to_sym) %></div>
                  <%= image_tag attachment[:preview_url], title: attachment[:filename], class: "rounded-lg object-cover w-full h-12" %>
                </div>
              <% end %>
            <% else %>
              <%= link_to calendar_post_path(post.calendar, post), class: "Btn-primary mt-1 bg-blue-500 draggable w-15 h-15 flex items-center justify-center text-center relative", data: { post_id: post.id, calendar_id: post.calendar.id, datetime: post.publish_date - Time.new(post.publish_date.year, post.publish_date.month, post.publish_date.day) } do %>
                <%= post.publish_date.strftime("%H:%M") %>
                <div class="absolute top-0 left-0 text-xs text-white bg-black bg-opacity-20 p-0.2 rounded-full">
                  <%= statusToIcon.dig(post.status.to_sym) %>
                </div>
              <% end %>
            <% end %>          
          <% end %>
        </div>

      </div>
    <% end %>
  </div>
</div>

<script>
  $(document).ready(function() {
    function build_axios() {
      axios.defaults.withCredentials = true;
      const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
      axios.defaults.headers.common['X-CSRF-Token'] = csrfToken;
    }
    var outside = false
    $(".draggable").draggable({
      cursor: "move",
      revert: "invalid",
      helper: "clone",
      start: function (event, ui) {
        ui.helper.width($(this).width());
        ui.helper.height($(this).height());
        $(this).hide()
        outside = false
      },
      stop: function (event, ui) {
        if(outside)
          $(this).show()
      }
    });
    function reset_element(draggedElement) {
      draggedElement.removeClass("ui-draggable-handle");
      draggedElement.removeClass("ui-draggable");
      draggedElement.removeAttr("style")
      draggedElement.css("position","relative")
    }
    $(".droppable").droppable({
      accept: ".draggable",
      out : function(){
        outside = true;
      },
      over : function(){
        outside = false;
      },
      drop: function(event, ui) {
        const draggedElement = ui.draggable;
        const postId = draggedElement.data("post-id");
        const calendarId = draggedElement.data("calendar-id");
        const newDate = $(this).data("date");
        const url = `/calendars/${calendarId}/posts/${postId}/update_day?date=${newDate}`;
        build_axios()
        axios.patch(url)
        .then((response) => {
          draggedElement.detach();
          reset_element(draggedElement)
          $(this).find(".posts-container").append(draggedElement);
          $container = $(this).find(".posts-container")
          $container.find('.draggable').sort(function (a, b) {
            var contentA = parseInt($(a).data('datetime'));
            var contentB = parseInt($(b).data('datetime'));
            return (contentA < contentB) ? -1 : (contentA > contentB) ? 1 : 0;
          }).appendTo($container); 
        })
        .catch((error) => {
          reset_element(draggedElement)
        })
      }
    });
    var menu_opened = false;
    $('.create-post').on('click', function click() {
      const day = $(this).data("day")
      if (menu_opened){
        $(`#${day}`).addClass("hidden");
        $(this).text("+");
      }
      else {
        $(`#${day}`).removeClass("hidden");
        $(this).text("x");
      }
      menu_opened = !menu_opened;
    });
  })
</script>