<div id="calendars_page" class="p-4 flex">
  <%= link_to "+", selector_calendars_path, class: "Btn-primary fixed bottom-4 right-4 z-50 rounded-full shadow-md  w-12 h-12 justify-center text-lg" %>
  <div class="w-1/4 p-4 bg-gray-100 rounded-lg shadow-md flex flex-col">
    <div class="mt-4">
      <h2 class="text-lg font-bold mb-4">Calendars</h2>
      <%= form_with url: calendars_path, method: :get, local: true, id: "calendar_filter_form" do %>
        <div class="overflow-x-auto">
          <table class="min-w-full bg-white shadow-md rounded-lg border border-gray-200">
            <thead>
              <tr>
                <th class="TableHeader border-r border-gray-200">Select</th>
                <th class="TableHeader border-r border-gray-200">Calendar Name</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <% @calendars.each do |calendar| %>
                <tr class="hover:bg-gray-100">
                  <td class="TableEntry border-r border-gray-200 text-center">
                    <%= check_box_tag "calendar_ids[]", calendar.id, params[:calendar_ids]&.include?(calendar.id.to_s) || params[:calendar_ids].nil?, class: "mr-2" %>
                  </td>
                  <td class="TableEntry border-r border-gray-200">
                    <%= label_tag "calendar_ids_#{calendar.id}", calendar.name, class: "flex-grow" %>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
        <%= hidden_field_tag :start_date, @start_date %>
      <% end %>
    </div>
  </div>

  <div class="w-3/4 p-4">
    <div class="flex justify-between items-center mb-4">
      <%= link_to "Previous Year", params.permit(:start_date, calendar_ids: []).merge(start_date: @start_date.prev_year), class: "text-blue-500 hover:underline" %>
      <%= link_to "Previous", params.permit(:start_date, calendar_ids: []).merge(start_date: @start_date.prev_month), class: "text-blue-500 hover:underline" %>
      <div class="text-lg font-bold text-gray-700">
        <%= @start_date.strftime("%B %Y") %>
      </div>
      <%= link_to "Next", params.permit(:start_date, calendar_ids: []).merge(start_date: @start_date.next_month), class: "text-blue-500 hover:underline" %>
      <%= link_to "Next Year", params.permit(:start_date, calendar_ids: []).merge(start_date: @start_date.next_year), class: "text-blue-500 hover:underline" %>
    </div>

    <%= month_calendar(events: @posts, attribute: :publish_date, previous_label: nil, next_label: nil) do |date, posts| %>
      <div class="droppable day wday-<%= date.wday %> past current-month border p-2 relative calendar-box" data-date="<%= date %>">
        <div class="date text-sm font-bold text-gray-700">
          <%= date.day %>
        </div>
        <div class="posts-container overflow-y-auto">
          <% posts.each do |post| %>
            <%= link_to post.title, calendar_post_path(post.calendar, post), class: "Btn-primary mt-2 bg-blue-500 draggable", data: { post_id: post.id, calendar_id: post.calendar.id }  %>
          <% end %>
        </div>
      </div>
    <% end %>
  </div>
</div>

<style>
  .calendar-heading {
    display: none;
  }
  .posts-container {
    max-height: 6rem; /* Adjust this value as needed */
  }
  .calendar-box {
    height: 150px; /* Set a fixed height */
    width: 100%; /* Ensure it takes the full width of the container */
    box-sizing: border-box; /* Include padding and border in the element's total width and height */
  }
  .table {
    table-layout: fixed;
  }
</style>
<script>
  $(document).ready(function() {
    function build_axios() {
      axios.defaults.withCredentials = true;
      const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
      axios.defaults.headers.common['X-CSRF-Token'] = csrfToken;
    }

    $(".draggable").draggable({
      cursor: "move",
      revert: "invalid",
      helper: 'clone'
    });
    function reset_element(draggedElement) {
      draggedElement.removeClass("ui-draggable-handle");
      draggedElement.removeClass("ui-draggable");
      draggedElement.removeAttr("style")
      draggedElement.css("position","relative")
    }
    $(".droppable").droppable({
      accept: ".draggable",
      drop: function(event, ui) {
        const draggedElement = ui.draggable;
        const postId = draggedElement.data("post-id");
        const calendarId = draggedElement.data("calendar-id");
        const newDate = $(this).data("date");
        const url = `/calendars/${calendarId}/posts/${postId}/update_day?date=${newDate}`;
        build_axios()
        axios.patch(url)
        .then((response) => {
          console.log('Sucess')
          draggedElement.detach();
          reset_element(draggedElement)
          $(this).find(".posts-container").append(draggedElement);
        })
        .catch((error) => {
          console.log('Error')
          reset_element(draggedElement)
        })
      }
    });
  })
</script>